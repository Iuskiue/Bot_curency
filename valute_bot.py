import logging
from aiogram import Bot, Dispatcher, executor, types
import requests
import json

TOKEN = ""

# Configure logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

#parsing
data = requests.get('https://www.cbr-xml-daily.ru/daily_json.js').json()


#First contact with user
@dp.message_handler(commands=["start","help"])
async def start_message(message: types.Message):
	but1 = types.KeyboardButton("üíµ–ö—É—Ä—Å—ã –≤–∞–ª—é—Çüí∂")
	but2 = types.KeyboardButton("–û–± –∞–≤—Ç–æ—Ä–µ")
	keyboard1 = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True)
	keyboard1.add(but1).add(but2)
	await message.answer("–î–æ–±—Ä—ã–π –¥–µ–Ω—å –∏–ª–∏ –≤–µ—á–µ—Ä\n–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É", reply_markup=keyboard1)

#Currency
@dp.message_handler()
async def get_values(message: types.Message):
	if message.text=="üíµ–ö—É—Ä—Å—ã –≤–∞–ª—é—Çüí∂":
		but1 = types.InlineKeyboardButton(text="USD",callback_data="usd")
		but2 = types.InlineKeyboardButton(text="EUR", callback_data="eur")
		keyboard2 = types.InlineKeyboardMarkup(width=2)
		keyboard2.add(but1, but2)
		await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É", reply_markup=keyboard2)
	elif message.text=="–û–± –∞–≤—Ç–æ—Ä–µ":
		await message.answer("–ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∞–∫—Å–∏–º, —è –Ω–∞—á–∏–Ω–∞—é—â–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ Pythonüêç.\n–≠—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π –±–æ—Ç –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞—ë—Ç —Å–∞–º—ã–π —Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å —Å–∞–π—Ç–∞ –¶–ë.\n–ú–æ—è —Ç–µ–ª–µ–≥–∞ ---> @Iuskiue")
	else:
		await message.answer("–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É!")	

	

#Printing USD
@dp.callback_query_handler(text="usd")
async def get_usd(call: types.CallbackQuery):
	await call.message.answer("üíµ –ù–∞ —Å–µ–≥–æ–¥–Ω—è –∫—É—Ä—Å —Ä–∞–≤–µ–Ω "+str(data['Valute']['USD']["Value"])+" —Ä—É–±–ª—è. \nüíµ –ù–µ–¥–∞–≤–Ω–æ –∫—É—Ä—Å –±—ã–ª "+str(data['Valute']['USD']["Previous"])+" —Ä—É–±–ª—è.")

#Printing EUR
@dp.callback_query_handler(text="eur")
async def get_usd(call: types.CallbackQuery):
	await call.message.answer("üí∂ –ù–∞ —Å–µ–≥–æ–¥–Ω—è –∫—É—Ä—Å —Ä–∞–≤–µ–Ω "+str(data['Valute']['EUR']["Value"])+" —Ä—É–±–ª—è. \nüí∂ –ù–µ–¥–∞–≤–Ω–æ –∫—É—Ä—Å –±—ã–ª "+str(data['Valute']['EUR']["Previous"])+" —Ä—É–±–ª—è.")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)

